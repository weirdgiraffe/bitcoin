//
// tx_test.go
// Copyright (C) 2017 weirdgiraffe <giraffe@cyberzoo.xyz>
//
// Distributed under terms of the MIT license.
//

package bitcoin

import (
	"bytes"
	"encoding/hex"
	"testing"
)

func TestTxSerialisation(t *testing.T) {
	rawTx := []byte{
		0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x53, 0x03, 0x54, 0x4a, 0x06, 0xb0, 0x7b,
		0x57, 0x7f, 0x09, 0x11, 0xa8, 0x56, 0x60, 0x08, 0x40, 0x00, 0xef, 0x50, 0x42, 0x71, 0x2c, 0x00,
		0x20, 0x2f, 0x42, 0x54, 0x43, 0x43, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0xff, 0x01, 0xf7, 0xf8, 0x1e, 0x98, 0x00, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x2c, 0x30,
		0xa6, 0xaa, 0xac, 0x6d, 0x96, 0x68, 0x72, 0x91, 0x47, 0x5d, 0x7d, 0x52, 0xf4, 0xb4, 0x69, 0xf6,
		0x65, 0xa6, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,
	}
	r := bytes.NewBuffer(rawTx)
	tx, err := ReadTx(r)
	if err != nil {
		t.Fatal(err)
	}
	nullHash := DoubleHash{}
	if bytes.Compare(tx.Hash[:], nullHash[:]) == 0 {
		t.Errorf("tx has a null hash")
	}
	b := tx.Raw()
	if bytes.Compare(rawTx, b) != 0 {
		t.Errorf("serialized tx not match input tx:\ninput:\n%s\nserialized:\n%s", hex.Dump(rawTx), hex.Dump(b))
	}
}
